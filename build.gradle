plugins {
    id "fabric-loom" version "1.5-SNAPSHOT"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Meteor Dev Releases"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "Meteor Dev Snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        name = '3arthMaven'
        url = 'https://3arthqu4ke.github.io/maven'
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

    // PingBypass
    api("me.earth.pingbypass:pb-api:$project.pb_version") {
        exclude module: 'gson'
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

jar {
    manifest {
        attributes(
            'PingBypassPluginConfig': 'MeteorPBPluginConfig.json',
            'Implementation-Title': 'Meteor-PingBypass-Plugin',
            'Implementation-Version': project.version,
        )
    }
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mc_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
